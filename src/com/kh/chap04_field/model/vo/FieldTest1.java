package com.kh.chap04_field.model.vo;

/*
 * >> 변수 구분
 * 
 * - 전역변수: 클래스 영역에 바로 선언한 변수 --> 클래스 내에서면 어디서든 전역으로 다 사용 가능
 * - 지역변수: 클래스 영역 내의 어떤 특정한 구역({})에 선언한 변수 --> 선언된 해당 그 지역에서만 사용 간으
 * 			* 특정한 구역: 메소드{}, 제어문(if, for){} 등등
 * 
 * 1. 전역변수
 * - 멤버변수 == 인스턴스변수 == 필드
 * 	  생성시점: new 연산자를 통해서 객체 생성 시
 * 	  소멸시점: 객체 소멸 시 같이 소멸
 * 
 * - 클래스변수 == static 변수
 * 	  생성시점: 프로그램 실행(해당 객체 생성이 되지 않아도)과 동시에 무조건 메모리영역(static)에 할당
 * 	  소멸시점: 프로그램 종료될 때 소멸
 * 
 * 2. 지역변수
 * 	  생성시점: 지역변수가 속해있는 특정한 구역({}) 실행(호출) 시 메모리영역에 할당
 *   소멸시점: 특정한 구역({}) 종료 시 소멸
 * 
 * 
 */

// 병수 선언 위치에 따른 구분을 보기 위한 클래스 (전역, 지역, 매개)
public class FieldTest1 { // class begin

	// 멤버변수(인스턴스변수)
	private int global;
	
	public void test(int num) { // test begin
		// 매개변수 (일종의 지역변수 즉, 메소드 영역 내에서만 쓸 수 있음)
		
		// 지역변수 (메소드 영역 내에 선언) => 지역변수에는 접근제한자를 붙이지 않음
		int local = 10;
		
		// 멤버변수 출력 => 멤버변수는 해당 이객체 생성 시 JVM이 기본값으로라도 초기화
		System.out.println(global);
		
		// 매개변수 출력 => 매개변수는 해당 이 메소드 호출 시 반드시 값이 전달되어 올 것이기 때문에 초기화 되어있음
		System.out.println(num);
		
		// 지역변수 출력
		System.out.println(local);
		
	}// test end
	
	
	
	
	
	
}// class end
